{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Nutrasuite","tagline":"Nutrasuite is a low-calorie syntax sweetener for minitest","body":"# Nutrasuite\r\nA low-calorie sweetener for your minitests.\r\n\r\n## Purpose\r\n\r\nWe really like using Minitest, and really didn't like the fact that\r\ncontexts for your tests weren't built in. So we wrote Nutrasuite.\r\n\r\n### OH NO ANOTHER TEST FRAMEWORK WHY ARGHUBUGAJKGAaSDFAWEGSGA\r\n\r\nNope. Just something to make working with minitest a little easier.\r\n\r\n### Why don't you just use RSpec or Minitest::Spec?\r\n\r\nBecause monkeying with the object namespace just to write tests makes us feel dirty in all the wrong ways.\r\n\r\n### Why don't you just use shoulda-context?\r\n\r\nBecause it pretty much seems to have been deprecated, so we'd rather take a few\r\nminutes to put something together that we can maintain.\r\n\r\n### Why haven't you used [something else]?\r\n\r\nBecause we haven't heard of it, or it didn't work, or it wasn't available as a\r\nproper gem anymore.\r\n\r\n## Usage\r\n\r\nAlthough there may be some more niceties added in the future, right now\r\nNutrasuite is all about contexts. Write your tests like so:\r\n\r\n    require 'nutrasuite'\r\n    class SomeTest < MiniTest::Unit::TestCase\r\n      a \"newly instantiated test object\" do\r\n        before do\r\n          some_setup_stuff\r\n        end\r\n\r\n        it \"tests for stuff\" do\r\n          assert true\r\n        end\r\n\r\n        after do\r\n          some_teardown_stuff\r\n        end\r\n      end\r\n    end\r\n\r\nAll of your other minitest stuff should work normally. Context\r\nbefore/after blocks are executed once for each test, so the randomization built into\r\nminitest will still work as you'd expect.\r\n\r\n`a`, `an`, `and_also`, `the`, and `that` all define contexts, so you can build\r\nreadable sentences like \"_a_ user _that_ has an expired password _and_also_ a bad\r\nemail address\" or \"_the_ singleton.\"\r\n\r\n`it` defines tests; `it_eventually` defines tests that are to be skipped.\r\n\r\n## Get it\r\n\r\nIt's a gem named nutrasuite. Install it and make it available however\r\nyou prefer.\r\n\r\nIf you want to use it you'll at least need Ruby 1.9. Other than that it should\r\nbe compatible with anything that works with MiniTest; we're not currently aware\r\nof any conflicts.\r\n\r\n## Contributions\r\n\r\nIf Nutrasuite interests you and you think you might want to contribute, hit me up\r\nover Github. You can also just fork it and make some changes, but there's a\r\nbetter chance that your work won't be duplicated or rendered obsolete if you\r\ncheck in on the current development status first.\r\nGem requirements/etc. should be handled by Bundler.\r\n\r\n### Contributors\r\n\r\n- Alan Johnson (commondream)\r\n- Graham Ashton (gma)\r\n\r\n## License\r\nCopyright (C) 2012 by Tommy Morgan\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","google":""}